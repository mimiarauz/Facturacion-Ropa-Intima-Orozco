name: Secrets - Gitleaks

on:
  push:
    branches: [ main, fix/**, feature/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  gitleaks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Escaneo completo del historial de commits

      - name: Instalar y ejecutar Gitleaks (detección de secretos)
        run: |
          echo "🔍 Ejecutando escaneo de secretos con Gitleaks..."
          # Descargar e instalar la última versión estable
          wget -q https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64.tar.gz
          tar -xzf gitleaks-linux-amd64.tar.gz
          sudo mv gitleaks /usr/local/bin/

          # Escanear todo el repositorio (sin fallar el pipeline si hay hallazgos)
          gitleaks detect --source . --no-git --report-format json --report-path gitleaks-report.json || true

          # Convertir el reporte JSON a SARIF (para Code Scanning)
          echo "📄 Generando reporte SARIF..."
          gitleaks detect --source . --no-git --report-format sarif --report-path gitleaks-report.sarif || true

          # Generar versión HTML para evidencia visual
          echo "<html><head><title>Reporte Gitleaks</title></head><body><h1>🔐 Reporte de Fugas de Información</h1><p>Proyecto: Facturación Ropa Íntima Orozco</p><pre>" > gitleaks-report.html
          cat gitleaks-report.json >> gitleaks-report.html
          echo "</pre></body></html>" >> gitleaks-report.html

      - name: Subir reportes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: |
            gitleaks-report.json
            gitleaks-report.html
            gitleaks-report.sarif

      - name: Publicar resultados en pestaña Seguridad
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks-report.sarif
